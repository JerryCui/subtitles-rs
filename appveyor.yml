environment:
  matrix:
    # We really only need one host configuration, especially as the build
    # gets more complicated, and "msvc" is the most Windows-like choice.
    - RUST_HOST: "i686-pc-windows-msvc"

install:
  - ps: Start-FileDownload "https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe"
  - SET PATH=C:\msys64\mingw32\bin;C:\msys64\usr\bin;%PATH%
  - rustup-init.exe -y --default-host %RUST_HOST%
  - SET PATH=C:\Users\appveyor\.cargo\bin;%PATH%
  - ps: Start-FileDownload "https://ffmpeg.zeranoe.com/builds/win32/static/ffmpeg-3.2.4-win32-static.zip"
  - 7z x ffmpeg-3.2.4-win32-static.zip
  - move ffmpeg-3.2.4-win32-static c:\ffmpeg
  - SET PATH=C:\ffmpeg\bin;%PATH%
  - rustc -V
  - cargo -V
  - cmake --version
  - ffmpeg -version

# Disable the standard Windows build system.
build: false

# This also builds and tests the binary version of substudy using `cli_test_dir`.
test_script:
  - cargo test --verbose

# See https://github.com/japaric/rust-everywhere/blob/master/appveyor.yml
before_deploy:
  - cargo build --release
  - mkdir staging
  - copy target\release\substudy.exe staging
  - cd staging
  - 7z a ../substudy-%APPVEYOR_REPO_TAG_NAME%-windows.zip *
  - appveyor PushArtifact ../substudy-%APPVEYOR_REPO_TAG_NAME%-windows.zip

deploy:
  # AppVeyor and GitHub insist on clobbering these notes, so let's at least
  # use something non-descript that tells us what we need to fix.
  description: '(release notes go here)'
  provider: GitHub
  auth_token:
    secure: '8KtxQyAl8Q0BbyNsAUNJxnPry/Dz/4p3W58Xozz3dfvt4rs+DkPRybCRp7A3mszq'
  artifact: /.*\.zip/
  on:
    # Only deploy if we have a tag.
    appveyor_repo_tag: true
