environment:
  matrix:
    # We really only need one host configuration, especially as the build
    # gets more complicated, and "msvc" is the most Windows-like choice.
    - RUST_HOST: "i686-pc-windows-msvc"

install:
  - ps: Start-FileDownload "https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe"
  - SET PATH=C:\msys64\mingw32\bin;C:\msys64\usr\bin;%PATH%
  - rustup-init.exe -y --default-host %RUST_HOST%
  - SET PATH=C:\Users\appveyor\.cargo\bin;%PATH%
  - ps: Start-FileDownload "https://ffmpeg.zeranoe.com/builds/win32/static/ffmpeg-3.2.4-win32-static.zip"
  - 7z x ffmpeg-3.2.4-win32-static.zip
  - move ffmpeg-3.2.4-win32-static c:\ffmpeg
  - SET PATH=C:\ffmpeg\bin;%PATH%
  - rustc -V
  - cargo -V
  - ffmpeg -version

# Disable the standard Windows build system.
build: false

# This also builds and tests the binary version of substudy using `cli_test_dir`.
test_script:
  - cargo test --all --verbose
  # This is all technically artifact creation, and we only need it for tags
  # beginning with `substudy_`, but that's impossible to specify using
  # AppVeyor. So just build this as an artifact on every push.
  - cargo build --all --release
  - mkdir staging
  - copy target\release\substudy.exe staging
  - cd staging
  - 7z a ../substudy-%APPVEYOR_REPO_TAG_NAME%-windows.zip *
  - appveyor PushArtifact ../substudy-%APPVEYOR_REPO_TAG_NAME%-windows.zip

# Specify artifacts that we might want to release manually.  This is then
# released by creating a new substudy deployment via environment
# https://ci.appveyor.com/environment/33451
artifacts:
  - path: 'substudy-*.zip'
    name: 'substudy for Windows'
    type: zip
